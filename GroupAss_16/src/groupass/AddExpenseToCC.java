/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HomeScreen.java
 *
 * Created on 23/05/2012, 4:27:28 PM
 */
package groupass;

import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author z3375080
 */
public class AddExpenseToCC extends javax.swing.JFrame {

    /**
     * Creates new form HomeScreen
     */
    public AddExpenseToCC() {
        initComponents();
        populateList();
        populateDropdown();
    }
    private Home returnHomeScreen;
    private AddExpense returnExpenseScreen;
    private Expense previousExpense;
    ArrayList<Expense> existingExpenses = new ArrayList<Expense>();
    ArrayList<CostCentre> existingCostCentres = new ArrayList<CostCentre>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        amountInput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        costCentreSelect = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        back = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        expenseList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descInput = new javax.swing.JTextArea();
        statusText = new javax.swing.JTextField();
        navigationPanel = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        addExpenseItemButton = new javax.swing.JButton();
        addExpenseButton = new javax.swing.JButton();
        addCostCentreButton = new javax.swing.JButton();
        editCostCentreButton = new javax.swing.JButton();
        editExistingExpense = new javax.swing.JButton();
        reportsButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        title1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(244, 244, 244));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "EXPENSE", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 24))); // NOI18N

        jLabel6.setText("Amount:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Log an amount to Cost Centre");

        jLabel8.setText("Cost Centre:");

        costCentreSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costCentreSelectActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Choose an existing expense");

        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-add-to-database.png"))); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-action-back.png"))); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-clear-button.png"))); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        expenseList.setModel(new DefaultListModel());
        expenseList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(expenseList);

        jLabel2.setText("Description:");

        descInput.setColumns(20);
        descInput.setRows(5);
        jScrollPane1.setViewportView(descInput);

        statusText.setEditable(false);
        statusText.setText("Ready!");
        statusText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addComponent(statusText, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(costCentreSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel2))
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGap(17, 17, 17)
                                                    .addComponent(amountInput, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(costCentreSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(clear)
                    .addComponent(update))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        navigationPanel.setBackground(new java.awt.Color(244, 244, 244));
        navigationPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        navigationPanel.setMaximumSize(new java.awt.Dimension(1024, 768));
        navigationPanel.setPreferredSize(new java.awt.Dimension(266, 591));

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-home.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        addExpenseItemButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-log.png"))); // NOI18N
        addExpenseItemButton.setText("Log an Expense to Cost Centre");
        addExpenseItemButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        addExpenseItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addExpenseItemButtonActionPerformed(evt);
            }
        });

        addExpenseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-add-button.png"))); // NOI18N
        addExpenseButton.setText("Add an Expense");
        addExpenseButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        addExpenseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addExpenseButtonActionPerformed(evt);
            }
        });

        addCostCentreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-add-button.png"))); // NOI18N
        addCostCentreButton.setText("Add a Cost Centre");
        addCostCentreButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        addCostCentreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCostCentreButtonActionPerformed(evt);
            }
        });

        editCostCentreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-edit-button.png"))); // NOI18N
        editCostCentreButton.setText("Edit an Existing Cost Centre");
        editCostCentreButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        editCostCentreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCostCentreButtonActionPerformed(evt);
            }
        });

        editExistingExpense.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-edit-button.png"))); // NOI18N
        editExistingExpense.setText("Edit an Existing Expense");
        editExistingExpense.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        editExistingExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editExistingExpenseActionPerformed(evt);
            }
        });

        reportsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/small-report-button.png"))); // NOI18N
        reportsButton.setText("Create Reports");
        reportsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        reportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsButtonActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/g.png"))); // NOI18N

        javax.swing.GroupLayout navigationPanelLayout = new javax.swing.GroupLayout(navigationPanel);
        navigationPanel.setLayout(navigationPanelLayout);
        navigationPanelLayout.setHorizontalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(reportsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editExistingExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editCostCentreButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addCostCentreButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addExpenseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addExpenseItemButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(homeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel3))
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        navigationPanelLayout.setVerticalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addExpenseItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addExpenseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCostCentreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editCostCentreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editExistingExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(reportsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(244, 244, 244));
        jPanel5.setPreferredSize(new java.awt.Dimension(787, 102));

        title1.setFont(new java.awt.Font("Lao UI", 1, 55)); // NOI18N
        title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1.setText("Cost Tracker Pro");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(title1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1005, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(navigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addComponent(navigationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        if (returnHomeScreen == null) {
            returnHomeScreen = new Home();
        }
        returnHomeScreen.setVisible(true);
        returnHomeScreen.setStatus("Ready! - Expense was not logged against any Cost Centre");
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        if (returnHomeScreen == null) {
            returnHomeScreen = new Home();
        }
        returnHomeScreen.setVisible(true);
        returnHomeScreen.setStatus("Ready!");
        this.setVisible(false);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void addExpenseItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExpenseItemButtonActionPerformed
    }//GEN-LAST:event_addExpenseItemButtonActionPerformed

    private void addExpenseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExpenseButtonActionPerformed
        AddExpense addExpense = new AddExpense();
        this.setVisible(false);
        addExpense.setVisible(true);
    }//GEN-LAST:event_addExpenseButtonActionPerformed

    private void addCostCentreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCostCentreButtonActionPerformed
        AddCostCentre addCostCentre = new AddCostCentre();
        this.setVisible(false);
        addCostCentre.setVisible(true);
    }//GEN-LAST:event_addCostCentreButtonActionPerformed

    private void editCostCentreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCostCentreButtonActionPerformed
        EditDeleteCostCentre editCostCentre = new EditDeleteCostCentre();
        this.setVisible(false);
        editCostCentre.setVisible(true);
    }//GEN-LAST:event_editCostCentreButtonActionPerformed

    private void editExistingExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editExistingExpenseActionPerformed
        EditDeleteExpense editExpense = new EditDeleteExpense();
        this.setVisible(false);
        editExpense.setVisible(true);
    }//GEN-LAST:event_editExistingExpenseActionPerformed

    private void reportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsButtonActionPerformed
        ReportsPage createReport = new ReportsPage();
        this.setVisible(false);
        createReport.setVisible(true);
    }//GEN-LAST:event_reportsButtonActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        amountInput.setText("");
        costCentreSelect.setSelectedIndex(0);
        descInput.setText("");
        setStatus("Ready");
    }//GEN-LAST:event_clearActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        DefaultListModel dlm = (DefaultListModel) expenseList.getModel();
        try {
            if (dlm.isEmpty() == false && costCentreSelect.getSelectedItem() != null && amountInput.getText() != null) {
                Expense expenseToLog = existingExpenses.get(expenseList.getSelectedIndex());
                CostCentre costCentreToLog = existingCostCentres.get(costCentreSelect.getSelectedIndex());
                long selectedExpenseID = expenseToLog.getExpenseID();
                int selectedCCID = costCentreToLog.getCostCentreId();
                double amount = new Double(amountInput.getText());
                String desc = descInput.getText();

                if (costCentreToLog.getAvailableFunds() - new Integer(amountInput.getText()) < 0 && costCentreToLog.isHardLimit()) {
                    this.setStatus("Please review - Limit Exceeded for this Cost Centre");
                } else if (costCentreToLog.getAvailableFunds() - new Integer(amountInput.getText()) < 0 && costCentreToLog.isHardLimit() == false) {                    
                    ExpenseItem newExpenseItem = new ExpenseItem(1, selectedExpenseID, selectedCCID, amount, desc);
                    newExpenseItem.addExpenseItem();
                    this.setStatus("Expense successfully logged - Note: Cost Centre's limit has been exceeded!");
                } else {                    
                    ExpenseItem newExpenseItem = new ExpenseItem(1, selectedExpenseID, selectedCCID, amount, desc);
                    newExpenseItem.addExpenseItem();    
                    this.setStatus("Expense successfully logged - Click clear to log another expense");
                }
                populateDropdown();
            }
        } catch (java.lang.NumberFormatException nfe) {
            this.setStatus("Error: Enter a numeric amount");
        } finally {        
        
        }
    }//GEN-LAST:event_updateActionPerformed

    private void costCentreSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costCentreSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costCentreSelectActionPerformed

    private void statusTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddExpenseToCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddExpenseToCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddExpenseToCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddExpenseToCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AddExpenseToCC().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCostCentreButton;
    private javax.swing.JButton addExpenseButton;
    private javax.swing.JButton addExpenseItemButton;
    private javax.swing.JTextField amountInput;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JComboBox costCentreSelect;
    private javax.swing.JTextArea descInput;
    private javax.swing.JButton editCostCentreButton;
    private javax.swing.JButton editExistingExpense;
    private javax.swing.JList expenseList;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel navigationPanel;
    private javax.swing.JButton reportsButton;
    private javax.swing.JTextField statusText;
    private javax.swing.JLabel title1;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the returnHomeScreen
     */
    public Home getReturnHomeScreen() {
        return returnHomeScreen;
    }

    /**
     * @param returnHomeScreen the returnHomeScreen to set
     */
    public void setReturnHomeScreen(Home returnHomeScreen) {
        this.returnHomeScreen = returnHomeScreen;
    }

    /**
     * @return the returnExpenseScreen
     */
    public AddExpense getReturnExpenseScreen() {
        return returnExpenseScreen;
    }

    /**
     * @param returnExpenseScreen the returnExpenseScreen to set
     */
    public void setReturnExpenseScreen(AddExpense returnExpenseScreen) {
        this.returnExpenseScreen = returnExpenseScreen;
    }

    public final void populateList() {
        DefaultListModel dlm = (DefaultListModel) expenseList.getModel();
        dlm.clear();
        List<Expense> expenses = Expense.getExpenses();
        if (expenses != null) {
            for (int i = 0; i < expenses.size(); i++) {
                dlm.addElement(expenses.get(i).getExpenseID() + " - " + expenses.get(i).getPayee() + " - " + expenses.get(i).getDescription());
                existingExpenses.add(expenses.get(i));
            }
        } else {
            dlm.clear();
            setStatus("No Expenses Found");
        }
        expenseList.setSelectedIndex(expenseList.getLastVisibleIndex());
    }

    public final void populateDropdown() {
        costCentreSelect.removeAllItems();
        List<CostCentre> costCentres = CostCentre.getActiveCostCentres();
        if (costCentres != null) {
            for (int i = 0; i < costCentres.size(); i++) {
                String hard = "Soft";
                if (costCentres.get(i).isHardLimit())
                    hard = "Hard";
                costCentreSelect.insertItemAt(costCentres.get(i).getCostCentreId() + " - " + costCentres.get(i).getName() + " - " + costCentres.get(i).getAvailableFunds() + " - " + hard, i);
                existingCostCentres.add(costCentres.get(i));
            }
        } else {
            costCentreSelect.insertItemAt("No Cost Centres Found!", 0);
        }
    }

    public void clearResults() {
        DefaultListModel dlm = (DefaultListModel) expenseList.getModel();
        costCentreSelect.removeAllItems();
    }

    public void setStatus(String s) {
        statusText.setText(s);
    }
}